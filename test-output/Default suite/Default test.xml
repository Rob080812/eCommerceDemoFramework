<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="Robin" failures="0" tests="6" name="Default test" time="10.086" errors="0" timestamp="2023-10-29T19:47:26 IST">
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@BeforeMethod setUp" time="9.037">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;org.openqa.selenium.SearchContext.findElement(org.openqa.selenium.By)&amp;quot; because &amp;quot;this.searchContext&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.SearchContext.findElement(org.openqa.selenium.By)" because "this.searchContext" is null
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy13.click(Unknown Source)
at com.ecommercedemo.qa.pageobject.HomePage.clickOnMyAccount(HomePage.java:41)
at com.ecommercedemo.qa.testcases.LoginTest.setUp(LoginTest.java:34)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:390)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:325)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:810)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:577)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@BeforeMethod setUp" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="@AfterMethod tearDown" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="verifyLoginWithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="verifyLoginWithValidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidCredentials -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="verifyLoginWithInvalidCredentials" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidCredentials -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="verifyLoginWithInvalidEmailAndValidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="verifyLoginWithValidEmailAndInvalidPassword" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
  <testcase classname="com.ecommercedemo.qa.testcases.LoginTest" name="verifyLoginWithoutProvidingCredentials" time="0.001">
    <skipped/>
  </testcase> <!-- verifyLoginWithoutProvidingCredentials -->
</testsuite> <!-- Default test -->
